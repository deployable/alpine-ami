
---
- hosts: alpine
  
  vars:
    path_build: /tmp
    dev_alpine: xvdf
    file_iso: alpine-standard-3.5.2-x86_64.iso
    pubkey: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCqGxLbtArl7UE1noY1tNpRxxQUFCTiSUzFBtT/TYvb8ZWn+wy6dgM5yh6jWQl/0ZCLgqF8tNZCemJ64KfL1+5QZAa027+2YqJuSqO0kYZk6fJ7o67P+zEny27NbAnERBLoTde0btGVd1ZneDTCfLROmbTJGKA9EyZ98CyCfBJNqYRllsNrqOfAKegxwSrRNYepuq3eGWKMfTvRECHq0XdTRdcQ7HpF+rZUPqnWwOv8zQZ8kWwepiqk5dQryfusvkj6EZHdW8ftc2ExOCCY9Mo/Zi2ggWvVlIdCRuV8X/7Ki4qVVohOpNFbuJr8HRDSq0q3kxkVdxRQkAgXLG1+tM2DaRD22F1r7KJEncU1K3Gq0CDxYQkfjQNcyRsn3/mJ3dphS0WskuL5xHxex1O3XTIlfqI0l8dSxdscDGtXiwF2+fccxCzOzovGauzGWrtCNVwNkepPt632AkGna379Qpms6HbZGnbr1LHA36OZ6xAY8w8RpkEFG34LVcH0Dfotsp8= admin@alpine
  become: yes

  tasks:

  - name: testing
    command: echo testing
  
  # - name: setup
  #   shell: |
  #     set -uex
  #     parted /dev/{{dev_alpine}} mklabel gpt Yes
  #     parted /dev/{{dev_alpine}} -sa optimal mkpart primary 0% 1024K
  #     parted /dev/{{dev_alpine}} set 1 bios_grub on
  #     parted /dev/{{dev_alpine}} -sa optimal -- mkpart primary ext4 1025K 700MiB
  #     parted /dev/{{dev_alpine}} name 2 root
  #     parted /dev/{{dev_alpine}} -sa optimal -- mkpart primary linux-swap 700.1MiB 100%
  #     parted /dev/{{dev_alpine}} name 3 swap
  #     parted /dev/{{dev_alpine}} print list
  #     mkdir target
  #     mkdir source
  #     mke2fs -t ext4 /dev/{{dev_alpine}}2
  #     mkswap /dev/{{dev_alpine}}3
  #     mount /dev/{{dev_alpine}}2 target
  #   args:
  #     chdir: '{{ path_build }}'

  - name: setup
    shell: |
      set -uex
      parted /dev/{{dev_alpine}} mktable msdos
      parted /dev/{{dev_alpine}} -sa optimal -- mkpart primary ext4 0% 1500MiB
      parted /dev/{{dev_alpine}} set 1 boot on
      parted /dev/{{dev_alpine}} -sa optimal -- mkpart primary linux-swap 1500.0001MiB 100%
      parted /dev/{{dev_alpine}} print list
      mkdir target
      mkdir source
      mke2fs -t ext4 /dev/{{dev_alpine}}1
      mkswap /dev/{{dev_alpine}}2
      mount /dev/{{dev_alpine}}1 target
    args:
      chdir: '{{ path_build }}'

  - get_url:    
      url: http://dl-cdn.alpinelinux.org/alpine/v3.5/releases/x86_64/{{file_iso}}
      dest: '{{ path_build }}/{{file_iso}}'

  - name: extract
    shell: |
      set -uex
      mount -o loop {{file_iso}} source
      cp -av source/boot target
      rm -f target/boot/modloop-grsec
      rm -f target/boot/modloop-virtgrsec
      rm -rf target/boot/syslinux
      umount source
    args:
      chdir: '{{ path_build }}'

  # - name: grub
  #   shell: |
  #     set -uex
  #     mkdir -p target/boot/grub
  #     touch target/boot/grub/grub.conf
  #     cd target/boot/grub/
  #     ln -sf grub.conf menu.lst
  #   args:
  #     chdir: '{{ path_build }}'
  #
  # - template: 
  #     src: grub.j2
  #     dest: '{{ path_build }}/target/boot/grub/grub.conf'
  
  - shell: blkid -o value /dev/xvdf1
    register: blkid_xvdf1

  - debug: var=blkid_xvdf1.stdout_lines

  - set_fact:
      blk_uuid: '{{ blkid_xvdf1.stdout_lines[0] }}'

  - template: 
      src: extlinux.conf.j2
      dest: '{{ path_build }}/target/boot/extlinux.conf'

  - get_url:    
      url: http://dl-cdn.alpinelinux.org/alpine/v3.5/main/x86_64/apk-tools-static-2.6.8-r2.apk
      #url: http://dl-cdn.alpinelinux.org/alpine/v3.4/main/x86_64/apk-tools-static-2.6.7-r0.apk
      dest: '{{ path_build }}/apk-tools-static-2.6.8-r2.apk'

  - copy: 
      src: chroot_run.sh
      dest: '{{ path_build }}/target/chroot_run.sh'
      mode: 0755

  - set_fact:
      chroot_dir: '{{path_build}}/target'

  - name: chroot setup
    shell: |
      set -uex
      mkdir {{chroot_dir}}/root/
      mkdir {{chroot_dir}}/etc/
      mkdir {{chroot_dir}}/etc/apk
      mkdir {{chroot_dir}}/etc/network
      mkdir {{chroot_dir}}/etc/init.d
      mkdir {{chroot_dir}}/proc/
      mkdir {{chroot_dir}}/sys/
      mkdir {{chroot_dir}}/dev/
      mknod -m 666 {{chroot_dir}}/dev/full c 1 7
      mknod -m 666 {{chroot_dir}}/dev/ptmx c 5 2
      mknod -m 644 {{chroot_dir}}/dev/random c 1 8
      mknod -m 644 {{chroot_dir}}/dev/urandom c 1 9
      mknod -m 666 {{chroot_dir}}/dev/zero c 1 5
      mknod -m 666 {{chroot_dir}}/dev/tty c 5 0
      mknod -m 666 {{chroot_dir}}/dev/xvda b 8 0
      mknod -m 666 {{chroot_dir}}/dev/xvda1 b 8 1
      mknod -m 666 {{chroot_dir}}/dev/xvda2 b 8 2
      mknod -m 666 {{chroot_dir}}/dev/xvda3 b 8 3
      mknod -m 666 {{chroot_dir}}/dev/xvda4 b 8 4
      rm -f {{chroot_dir}}/dev/null
      mknod -m 666 {{chroot_dir}}/dev/null c 1 3
      mount -t proc none {{chroot_dir}}/proc
      mount -o bind /sys {{chroot_dir}}/sys
      mount -o bind /dev {{chroot_dir}}/dev
    args:
      chdir: '{{path_build}}'

  - copy:
      src: ./etc-init.d-network-debug
      dest: '{{chroot_dir}}/etc/init.d/netdebug'
      mode: 0755

  - name: chroot config
    shell: |
      # Config
      echo "/dev/xvda1 / ext4 defaults 1 1" >> {{chroot_dir}}/etc/fstab
      echo "/dev/xvda2 none swap sw 0 0" >> {{chroot_dir}}/etc/fstab
      echo "ipv6" >> {{chroot_dir}}/etc/modules
      echo "awsbuild" > {{chroot_dir}}/etc/hostname
      mkdir -p {{chroot_dir}}/home/admin/.ssh
      echo '{{pubkey}}' > {{chroot_dir}}/home/admin/.ssh/authorized_keys
      cp /etc/resolv.conf {{chroot_dir}}/etc/
      tar -xzf apk-tools-static-2.6.8-r2.apk
      ./sbin/apk.static -X http://dl-cdn.alpinelinux.org/alpine/v3.5/main -U --allow-untrusted --root {{chroot_dir}} --initdb add alpine-base alpine-conf syslinux 
      echo alpine-ec2 > {{chroot_dir}}/etc/motd
      chroot {{chroot_dir}} /chroot_run.sh
    args:
      chdir: '{{path_build}}'

  - template:
      src: ./etc-hosts.j2
      dest: '{{chroot_dir}}/etc/hosts'

  - template:
      src: ./etc-network-interfaces.j2
      dest: '{{chroot_dir}}/etc/network/interfaces'

  - lineinfile:
      dest: '{{chroot_dir}}/etc/sudoers'
#      regex: 'admin ALL = NOPASSWD: ALL'
      line: 'admin ALL = NOPASSWD: ALL'

# wget 
# apk update
# apk add iproute2 grep gzip jq aiputils wget curl coreutils tar bash e2fsprogs procps pstree psutils gawk sed vim less groff python2 py2-pip
# pip install --upgrade pip
# pip install awscli